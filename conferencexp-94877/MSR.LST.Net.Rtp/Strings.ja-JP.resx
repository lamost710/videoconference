<?xml version="1.0"?>

<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActualPacketsDifferFromExpected" xml:space="preserve">
    <value>予想 pRtcpPacketExceptionacket {0}: {1}、受信した: {2}</value>
  </data>
  <data name="AdministratorPrivilegesRequired" xml:space="preserve">
    <value>必要な管理者特権</value>
  </data>
  <data name="ArraySizesMustAgree" xml:space="preserve">
    <value>配列サイズ同意する必要があります。</value>
  </data>
  <data name="BufferMustEndOnBoundary" xml:space="preserve">
    <value>バッファ サイズを 32 ビット境界上のバッファに終了しません: {0}、サイズ % 4: {1}</value>
  </data>
  <data name="BYEPacketMayContainMoreThan1SSRC" xml:space="preserve">
    <value>複数の SSRC BYE パケットが含まれる場合があります。 用意されている SSRCs 適切に操作するためのメソッドを使用してください。</value>
  </data>
  <data name="BYEReasonBytesExceeded" xml:space="preserve">
    <value>BYE 理由あります &lt; = UTF8 {0} バイト</value>
  </data>
  <data name="CallingANextFrameMethod" xml:space="preserve">
    <value>最初の呼び出し元の IsUsingNextFrame せずに NextFrame メソッドを呼び出す = true</value>
  </data>
  <data name="CallMovenextBeforeCallingCurrent" xml:space="preserve">
    <value>MoveNext() Current() 呼び出し前に呼び出す</value>
  </data>
  <data name="CannotAccessRtpMethods" xml:space="preserve">
    <value>Rtp、RtpSession いない Rtp トラフィック監視メソッドはアクセスできません!</value>
  </data>
  <data name="CantCreateAStreamNoParticipant" xml:space="preserve">
    <value>ストリームが参加者を関連付けると、ない場合は作成できません!</value>
  </data>
  <data name="CNameConflictDetectedRemoteMachines" xml:space="preserve">
    <value>2 つのリモート コンピュータ間で検出された CName-競合しています。 {0} {1} 競合する IP アドレスは、競合する CName-は {2}</value>
  </data>
  <data name="cNameMustBeAValidString" xml:space="preserve">
    <value>cName 有効文字列、preferrably ものと同様、電子メール アドレス、一意である必要があります。</value>
  </data>
  <data name="CompoundPacketsMustEndOnBoundary" xml:space="preserve">
    <value>複合パケット、32 ビット境界に終了する必要があります。</value>
  </data>
  <data name="ConferencexpNodesDetected" xml:space="preserve">
    <value>ConferenceXP ノードの検出:</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>データ</value>
  </data>
  <data name="DataLengthIncorrect" xml:space="preserve">
    <value>データをする必要がある &lt; = Rtp.MAX_PACKET_SIZE RtcpHeader.SIZE({1}) Rtp.SSRC_SIZE({2})--NAME_SIZE({3}) ({0})-</value>
  </data>
  <data name="DroppingDataPacket" xml:space="preserve">
    <value>データ パケットをドロップ: {0}、FecIndex: {1}、FrameIndex: {2}、TS: {3}</value>
  </data>
  <data name="DroppingFecPacket" xml:space="preserve">
    <value>ドロップ fec パケット: {0}、FecIndex: {1}、DataRangeMin: {2}</value>
  </data>
  <data name="DuplicateCNameDetected" xml:space="preserve">
    <value>{0} {1}、間のネットワーク上で DuplicateCNameDetectedEvent-A、ローカル CName-の複製が検出されました RtpListener シャットダウン</value>
  </data>
  <data name="DuplicateCnameWasDetected" xml:space="preserve">
    <value>{0} 個の間、重複した CNAME が検出されたと {1}。  接続テスト終了します。</value>
  </data>
  <data name="DuplicatePacketReceived" xml:space="preserve">
    <value>重複して受信したパケット!</value>
  </data>
  <data name="DuplicatePacketReceivedInRtpStream" xml:space="preserve">
    <value>RtpStream-{0} で受信したパケットを重複します。</value>
  </data>
  <data name="ErrorCallingAnEventDelegate" xml:space="preserve">
    <value>エラー-{0} イベント デリゲートを呼び出す</value>
  </data>
  <data name="ErrorDisposingConnectivityDetector" xml:space="preserve">
    <value>disposing ConnectivityDetector エラーです。
{0}</value>
  </data>
  <data name="EventNotHookedParticipantRemoved" xml:space="preserve">
    <value>イベント フックできません-ParticipantRemovedEvent-{0}</value>
  </data>
  <data name="EventNotHookedParticipantTimeout" xml:space="preserve">
    <value>イベント フックできません-ParticipantTimeoutEvent-{0}</value>
  </data>
  <data name="EventNotHookedRtpParticipantAdded" xml:space="preserve">
    <value>イベント フックできません-RtpParticipantAddedEvent-{0}</value>
  </data>
  <data name="EventNotHookedRtpStreamAdded" xml:space="preserve">
    <value>イベント フックできません-RtpStreamAddedEvent-{0}</value>
  </data>
  <data name="EventNotHookedRtpStreamRemoved" xml:space="preserve">
    <value>イベント フックできません-RtpStreamRemovedEvent-{0}</value>
  </data>
  <data name="EventNotHookedRtpStreamTimeout" xml:space="preserve">
    <value>イベント フックできません-RtpStreamTimeoutEvent-{0}</value>
  </data>
  <data name="FirstPacketMustBeSROrRR" xml:space="preserve">
    <value>複合 RTCP パケット内の最初のパケット、SR をする必要がある: {0} または RR: {1}、実際の: {2}</value>
  </data>
  <data name="FrameLengthShouldBePositive" xml:space="preserve">
    <value>frame.Length &gt; 0 は、それ以外の場合は、まず送信データ パケット。</value>
  </data>
  <data name="FrameOutOfSequenceEvent" xml:space="preserve">
    <value>FrameOutOfSequenceEvent-RtpStream: {0}、LostFrames: {1}、メッセージ: {2}</value>
  </data>
  <data name="FrameReceivedEvent" xml:space="preserve">
    <value>FrameReceivedEvent-{0}</value>
  </data>
  <data name="HeaderLengthAndItemCountDisagree" xml:space="preserve">
    <value>ヘッダーと長さ項目カウント disagree!</value>
  </data>
  <data name="IncompatibleArgumentsMessageLong" xml:space="preserve">
    <value>互換性のない引数; データを受信していない場合は RTP トラフィックを送信するし、参加者が指定する必要があります。  Rtcp 送信データだけは、有効なユース ケースされません。</value>
  </data>
  <data name="IncompatibleArgumentsMessageShort" xml:space="preserve">
    <value>互換性のない引数; データを受信していない場合は RTP トラフィックを送信するし、参加者が指定する必要があります。</value>
  </data>
  <data name="IncompatibleArgumentsStatus" xml:space="preserve">
    <value>互換性のない引数-participant(null)、rtpTraffic(true)</value>
  </data>
  <data name="IncompleteFrameReceived" xml:space="preserve">
    <value>不完全なフレーム-受信フレーム Lost</value>
  </data>
  <data name="IncorrectNumberOfNullObjects" xml:space="preserve">
    <value>不適切な期待、null オブジェクトの数: {0}、実際の: {1}</value>
  </data>
  <data name="InvalidBufferLength" xml:space="preserve">
    <value>無効なバッファの長さ: {0} にする必要がある: {1}</value>
  </data>
  <data name="InvalidItemCount" xml:space="preserve">
    <value>無効な ItemCount: {0}、あります &gt; = 0 または &lt; 31 =</value>
  </data>
  <data name="InvalidLength" xml:space="preserve">
    <value>長さが無効です: {0}、あります &gt; = 0 または &lt; = {1}</value>
  </data>
  <data name="InvalidPacketEvent" xml:space="preserve">
    <value>InvalidPacketEvent-{0}</value>
  </data>
  <data name="InvalidPacketInFrameEvent" xml:space="preserve">
    <value>InvalidPacketInFrameEvent-RtpStream: {0}、理由: {1}</value>
  </data>
  <data name="InvalidVersion" xml:space="preserve">
    <value>バージョンが無効です: {0}、現在: {1}</value>
  </data>
  <data name="IPAddressTryingToRemoveString" xml:space="preserve">
    <value>IPAddress: {0} ストリームを削除しようとしている (ssrc: {1})、IPAddress で所有: {2}</value>
  </data>
  <data name="JoinRequestToServerFailed" xml:space="preserve">
    <value>結合要求をサーバー {0}: {1} {2} できませんでした。 
{3}</value>
  </data>
  <data name="LeaveRequestToServerFailed" xml:space="preserve">
    <value>休暇要求をサーバー {0}: {1} {2} できませんでした。 
{3}</value>
  </data>
  <data name="LengthOfDataMustBePositive" xml:space="preserve">
    <value>データの長さは、必要がある &gt; = 0</value>
  </data>
  <data name="MethodMeantToBeOverridden" xml:space="preserve">
    <value>このメソッドは、派生クラスでオーバーライドするためのものでは</value>
  </data>
  <data name="MustBePositive" xml:space="preserve">
    <value>必要がある &gt; = 1</value>
  </data>
  <data name="MustContainMoreThan1Packet" xml:space="preserve">
    <value>複合 RTCP パケットを実際のカウント 1 を超えるパケットが含まれている必要がある: {0}</value>
  </data>
  <data name="NameIsRequired" xml:space="preserve">
    <value>名前は、必須であり {0} ASCII 文字ある必要があります。</value>
  </data>
  <data name="NameLengthIncorrect" xml:space="preserve">
    <value>名前 {0} ASCII 文字にする必要があります。</value>
  </data>
  <data name="NeedARealSenderReport" xml:space="preserve">
    <value>必要な実際の SenderReport、null でないです。</value>
  </data>
  <data name="NextFrameCallHasBeenUnblocked" xml:space="preserve">
    <value>NextFrame 呼び出しを手動または Dispose メソッドによって、unblocked されました</value>
  </data>
  <data name="NoPivotRowFound" xml:space="preserve">
    <value>見つかったピボット行!</value>
  </data>
  <data name="NullObjectsAreNotAccepted" xml:space="preserve">
    <value>null オブジェクトは受け付けられません</value>
  </data>
  <data name="OnBehalfOf" xml:space="preserve">
    <value>代わりの {0}、{1}</value>
  </data>
  <data name="PacketIsNotAnFECPacket" xml:space="preserve">
    <value>提供されているパケットは fec パケットいない!</value>
  </data>
  <data name="PaddingBytesDiscrepancy" xml:space="preserve">
    <value>実際の埋め込みバイトの数の間、不一致が: {0}、予想: {1}</value>
  </data>
  <data name="ParticipantRemovedEvent" xml:space="preserve">
    <value>ParticipantRemovedEvent-{0}</value>
  </data>
  <data name="ParticipantStatusChangedEvent" xml:space="preserve">
    <value>ParticipantStatusChangedEvent-参加者: {0}</value>
  </data>
  <data name="ParticipantTimeoutEvent" xml:space="preserve">
    <value>ParticipantTimeoutEvent-{0}</value>
  </data>
  <data name="PayloadTypeIsASevenBitStructure" xml:space="preserve">
    <value>MSR.LST.Rtp.RtpPacketBase.PayloadType が 7 ビット構造体を保持できます 0 ～ 127 の値</value>
  </data>
  <data name="Prefix" xml:space="preserve">
    <value>プレフィックス</value>
  </data>
  <data name="PrefixAndDataBytesExceeded" xml:space="preserve">
    <value>PRIV アイテムのプレフィックス + データできます超えない {0} UTF8 バイト</value>
  </data>
  <data name="ReceivedAnUnhandledRtcpType" xml:space="preserve">
    <value>受信した、未処理の Rtcp 型、{0}</value>
  </data>
  <data name="ReflectorEPNotSetProperly" xml:space="preserve">
    <value>ReflectorEP 正しく設定されません。</value>
  </data>
  <data name="RtpListenerBufferPoolGrowing" xml:space="preserve">
    <value>unbounded RtpListener バッファ プールが拡大します。  防ぐからすべての RAM を消費するために、配布/受信側スレッドが停止した、</value>
  </data>
  <data name="RtpPacketFecDoesNotSupportTimestamp" xml:space="preserve">
    <value>RtpPacketFec は、TimeStamp プロパティをサポートしません。</value>
  </data>
  <data name="RtpParticipantAddedEvent" xml:space="preserve">
    <value>RtpParticipantAddedEvent-{0}</value>
  </data>
  <data name="RtpSenderAlreadyDisposed" xml:space="preserve">
    <value>既に破棄されている RtpSender</value>
  </data>
  <data name="RtpSessionDoesNotContainASender" xml:space="preserve">
    <value>RtpSession、特定の SSRC-{0} の送信者が含まれていません</value>
  </data>
  <data name="RtpStreamAddedEvent" xml:space="preserve">
    <value>RtpStreamAddedEvent-{0}</value>
  </data>
  <data name="RtpStreamRemovedEvent" xml:space="preserve">
    <value>RtpStreamRemovedEvent-{0}</value>
  </data>
  <data name="RtpStreamTimeoutEvent" xml:space="preserve">
    <value>RtpStreamTimeoutEvent-{0}</value>
  </data>
  <data name="SDESItemDataBytesExceeded" xml:space="preserve">
    <value>SDES アイテムのデータを UTF8 {0} バイト超えないできます: {1}、{2}</value>
  </data>
  <data name="SDESPacketMayContainMoreThan1SSRC" xml:space="preserve">
    <value>複数の SSRC SDES パケットが含まれる場合があります。 用意されている SSRCs 適切に操作するためのメソッドを使用してください。</value>
  </data>
  <data name="SendAppPacketNotAllowed" xml:space="preserve">
    <value>SendAppPacket Rtcp リッスン モードのみで許可されません。</value>
  </data>
  <data name="SSRCConflictDetectedLocalSender" xml:space="preserve">
    <value>{0} に送信者にローカル送信者との間に検出 SSRC 競合しています。  ローカル送信者 ssrc を変更。</value>
  </data>
  <data name="SSRCConflictDetectedLocalSession" xml:space="preserve">
    <value>{0} で、送信者とローカル セッション間で検出された SSRC 競合しています。  セッション ssrc を変更。</value>
  </data>
  <data name="SSRCConflictDetectedRemoteMachines" xml:space="preserve">
    <value>SSRC 競合検出、2 つのリモート コンピュータ間で競合する IP アドレスが {0}</value>
  </data>
  <data name="SwapRowNotFound" xml:space="preserve">
    <value>スワップ行が見つかりません!</value>
  </data>
  <data name="ThereMustBeAtLeastOneIntPtr" xml:space="preserve">
    <value>データの少なくとも 1 つの IntPtr を送信する必要があります。</value>
  </data>
  <data name="TimeToLiveShouldBePositive" xml:space="preserve">
    <value>TimeToLive &gt; 0 必要があります。</value>
  </data>
  <data name="TooManyItems" xml:space="preserve">
    <value>31 を超える項目、RtcpPacket で持っていないことができます。</value>
  </data>
  <data name="UnexpectedPayloadType" xml:space="preserve">
    <value>予期しないペイロード型!</value>
  </data>
  <data name="UnexpectedSDESType" xml:space="preserve">
    <value>予期しない SDES 種類: {0}</value>
  </data>
  <data name="UnsupportedRole" xml:space="preserve">
    <value>サポートされていない役割: {0}</value>
  </data>
  <data name="ValueMaximumPayload" xml:space="preserve">
    <value>このパケットのペイロード: 最大値 {0}: {1}</value>
  </data>
  <data name="XORCanOnlyProduce1Checksum" xml:space="preserve">
    <value>XOR は、チェックサム 1 パケットのみ生成できます。</value>
  </data>
  <data name="YouCantSetThePaddingBit" xml:space="preserve">
    <value>最初のパケットで埋め込みビットを設定できません。</value>
  </data>
  <data name="YouMustBeAnAdministratorToInstall" xml:space="preserve">
    <value>管理者インストール Rtp またはを初めて実行する必要があります。</value>
  </data>
  <data name="ErrorDuringRtpSenderSend" xml:space="preserve">
    <value>RtpSender.Send {0} 中にエラーが発生しました</value>
  </data>
  <data name="ErrorDisposingRtpListener" xml:space="preserve">
    <value>Disposing RtpListener {0} エラー</value>
  </data>
  <data name="TryingToGrowTheBufferPool" xml:space="preserve">
    <value>PoolMaxGrows に達した後、バッファ プール拡張しようとします。</value>
  </data>
  <data name="ErrorWhileDisposingRtpSender" xml:space="preserve">
    <value>RtpSender disposing 中エラー: {0}</value>
  </data>
</root>