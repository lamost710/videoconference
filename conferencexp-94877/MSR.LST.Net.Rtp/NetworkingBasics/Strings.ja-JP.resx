<?xml version="1.0"?>

<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllIntegerValuesMustBePositive" xml:space="preserve">
    <value>すべての整数値 (サイズ、インデックス、長さ) する必要がある &gt; = 0</value>
  </data>
  <data name="BufferChunkDoesNotAcceptNull" xml:space="preserve">
    <value>BufferChunk または null オブジェクトを作成しません受け入れる</value>
  </data>
  <data name="BufferChunkDoesNotAcceptZeroLength" xml:space="preserve">
    <value>BufferChunk または長さ 0 のオブジェクトを作成しません受け入れる</value>
  </data>
  <data name="BufferChunkDoesNotHaveEnoughBuffer" xml:space="preserve">
    <value>BufferChunk は十分なバッファや、要求を満たすデータがありません。 要求された領域: 実績領域 {0}: {1}</value>
  </data>
  <data name="BufferChunkDoesNotHaveEnoughData" xml:space="preserve">
    <value>BufferChunk は、要求を満たす十分なデータがありません。 要求データ: 実績データ {0}: {1}</value>
  </data>
  <data name="DelayBetweenPacketsRange" xml:space="preserve">
    <value>DelayBetweenPackets、0 ～ 30 の範囲内でなければなりません</value>
  </data>
  <data name="DropPacketsSentPercentRange" xml:space="preserve">
    <value>DropPacketsSentPercent 0 ～ 100 であることが必要です。</value>
  </data>
  <data name="IndexAndLengthInvalidData" xml:space="preserve">
    <value>有効なデータのインデックスをインデックスと Length 指していません: {0} 長さ +: {1} あります &lt; = dataLength: {2}</value>
  </data>
  <data name="MulticastUdpListenerAlreadyDisposed" xml:space="preserve">
    <value>既に破棄されている MulticastUdpListener</value>
  </data>
  <data name="NullPointersAreInvalid" xml:space="preserve">
    <value>無効な引数が null ポインタです。</value>
  </data>
  <data name="SockDoesNotExistAsASharedSocket" xml:space="preserve">
    <value>sock 共有ソケットとして存在しません。</value>
  </data>
  <data name="UdpSenderAlreadyDisposed" xml:space="preserve">
    <value>既に破棄されている UdpSender</value>
  </data>
  <data name="UnableToFindLocalRoutingInterface" xml:space="preserve">
    <value>ローカル ルーティング インターフェイスを見つけられませんでした、されていないネットワークか。</value>
  </data>
</root>