//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSR.LST.ConferenceXP.ArchiveService {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Archiver.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddFrame called when the buffer does not have enough space available..
        /// </summary>
        internal static string AddFrameCalledError {
            get {
                return ResourceManager.GetString("AddFrameCalledError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must be an Administrator to install Rtp or run it for the first time..
        /// </summary>
        internal static string AdministratorPrivilegesText {
            get {
                return ResourceManager.GetString("AdministratorPrivilegesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator Privileges Required.
        /// </summary>
        internal static string AdministratorPrivilegesTitle {
            get {
                return ResourceManager.GetString("AdministratorPrivilegesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Service.
        /// </summary>
        internal static string ArchiveService {
            get {
                return ResourceManager.GetString("ArchiveService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ArchiveService@microsoft.com.
        /// </summary>
        internal static string ArchiveServiceMicrosoftCom {
            get {
                return ResourceManager.GetString("ArchiveServiceMicrosoftCom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Service started..
        /// </summary>
        internal static string ArchiveServiceStarted {
            get {
                return ResourceManager.GetString("ArchiveServiceStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Service stopped..
        /// </summary>
        internal static string ArchiveServiceStopped {
            get {
                return ResourceManager.GetString("ArchiveServiceStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BufferPlayer::SendFrames called while Populating..
        /// </summary>
        internal static string BufferplayerSendframesError {
            get {
                return ResourceManager.GetString("BufferplayerSendframesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conference name cannot contain &apos; or &quot;..
        /// </summary>
        internal static string ConferenceNameError {
            get {
                return ResourceManager.GetString("ConferenceNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database operation failed.  Exception:
        ///{0}.
        /// </summary>
        internal static string DatabaseOperationFailedError {
            get {
                return ResourceManager.GetString("DatabaseOperationFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to diagnostic server.
        /// </summary>
        internal static string DiagnosticServerError {
            get {
                return ResourceManager.GetString("DiagnosticServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dropping a frame in StreamRecorder::OnFrameReceived due to no buffers being available..
        /// </summary>
        internal static string DroppingAFrame {
            get {
                return ResourceManager.GetString("DroppingAFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save all indices in BufferRecorder::SaveIndices. Should have saved {0} only saved {1}.
        /// </summary>
        internal static string FailedToSaveAllIndices {
            get {
                return ResourceManager.GetString("FailedToSaveAllIndices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Growing buffers for stream {0} to {1}.
        /// </summary>
        internal static string GrowingBuffers {
            get {
                return ResourceManager.GetString("GrowingBuffers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LastTicks is transient while populating &amp; thus cannot be read..
        /// </summary>
        internal static string LastTicksIsTransientError {
            get {
                return ResourceManager.GetString("LastTicksIsTransientError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StreamPlayer::OnWakeUp reached and no data in buffers! ID: {0}.
        /// </summary>
        internal static string OnWakeUpNoDataError {
            get {
                return ResourceManager.GetString("OnWakeUpNoDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Osql.exe execution failed..
        /// </summary>
        internal static string OsqlFailed {
            get {
                return ResourceManager.GetString("OsqlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Osql.exe was not found..
        /// </summary>
        internal static string OsqlNotFound {
            get {
                return ResourceManager.GetString("OsqlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playback: {0} : {1}.
        /// </summary>
        internal static string Playback {
            get {
                return ResourceManager.GetString("Playback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A playback is ongoing in this venue.  Please choose another venue in which to record..
        /// </summary>
        internal static string PlaybackOngoingError {
            get {
                return ResourceManager.GetString("PlaybackOngoingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConferencePlayer::Play called when the player is already playing..
        /// </summary>
        internal static string PlayerAlreadyPlayingError {
            get {
                return ResourceManager.GetString("PlayerAlreadyPlayingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Playing).
        /// </summary>
        internal static string Playing {
            get {
                return ResourceManager.GetString("Playing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playing a recorded conference.
        ///  Venue IP/Port: {0}
        ///  Streams count: {1}.
        /// </summary>
        internal static string PlayingARecordedConference {
            get {
                return ResourceManager.GetString("PlayingARecordedConference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Populate called on sender that is not ready.
        /// </summary>
        internal static string PopulateCalledOnSenderError {
            get {
                return ResourceManager.GetString("PopulateCalledOnSenderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Recording).
        /// </summary>
        internal static string Recording {
            get {
                return ResourceManager.GetString("Recording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording a new conference.
        ///  Conference Description: {0}
        ///  Venue Identifier: {1}
        ///  Venue IP/Port: {2}.
        /// </summary>
        internal static string RecordingANewConference {
            get {
                return ResourceManager.GetString("RecordingANewConference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A playback or recording is ongoing in this venue.  Please choose another venue in which to playback..
        /// </summary>
        internal static string RecordingOngoingError {
            get {
                return ResourceManager.GetString("RecordingOngoingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to streams cannot be null.
        /// </summary>
        internal static string StreamsCannotBeNull {
            get {
                return ResourceManager.GetString("StreamsCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream with bad data reached. Continuing playback of all other streams. Stream ID: {0}.  Exception: 
        /// {1}.
        /// </summary>
        internal static string StreamWithBadDataReached {
            get {
                return ResourceManager.GetString("StreamWithBadDataReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String longer than accepted by database..
        /// </summary>
        internal static string StringLongerThanAccepted {
            get {
                return ResourceManager.GetString("StringLongerThanAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timeToJumpTo argument is less than the start time of the recording..
        /// </summary>
        internal static string TimeToJumpToLessThanStartTime {
            get {
                return ResourceManager.GetString("TimeToJumpToLessThanStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected stream for unknown participant, ignoring.  CNAME:.
        /// </summary>
        internal static string UnknownParticipantError {
            get {
                return ResourceManager.GetString("UnknownParticipantError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The venue&apos;s address protocol is not understood by the server.  This is due to using an IPv6 multicast address, which is not supported by this server.  Consult the ConferenceXP documentation for IPv6 support information..
        /// </summary>
        internal static string VenueAddressProtocolError {
            get {
                return ResourceManager.GetString("VenueAddressProtocolError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The venue provided does not correlate to an ongoing playback.  Perhaps playback has already been stopped..
        /// </summary>
        internal static string VenueDoesNotCorrelate {
            get {
                return ResourceManager.GetString("VenueDoesNotCorrelate", resourceCulture);
            }
        }
    }
}
