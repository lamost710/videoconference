<?xml version="1.0"?>

<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Author" xml:space="preserve">
    <value>著者: {0}</value>
  </data>
  <data name="Blank" xml:space="preserve">
    <value>&lt;Blank&gt;</value>
  </data>
  <data name="Checkbox" xml:space="preserve">
    <value>&lt; Checkbox &gt;</value>
  </data>
  <data name="ComboBox" xml:space="preserve">
    <value>&lt; コンボ ボックス &gt;</value>
  </data>
  <data name="DocumentFromNewAuthor" xml:space="preserve">
    <value>新しい作成者からのドキュメントが受信します。 選択またはで、ノートを置くよう、セクションの名前を入力してください。</value>
  </data>
  <data name="ErrorInOpeningFile" xml:space="preserve">
    <value>開く {0} でエラー、エラー メッセージ: {1}</value>
  </data>
  <data name="IfYouSeeThisFormMessage" xml:space="preserve">
    <value>このフォームは、表示される場合は、バグのです。  機能、閉じる場合死ぬは。</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>&lt; ラベル &gt;</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>[OK]</value>
  </data>
  <data name="OneNote2003WarningKey" xml:space="preserve">
    <value>OneNote 2003 の警告</value>
  </data>
  <data name="OneNote2003WarningMsg" xml:space="preserve">
    <value>OneNote 2003 が ConferenceXP がインストールされています。  CXP で OneNote を特別な機能を提供が OneNote 2003 Service Pack 1 はインストールする必要があります。
 OneNote SP1 をインストールするには officeupdate.microsoft.com に移動できます。

 注: 実行 OneNote したらを初期化する前に CXP が認識する必要があります。

 OneNote SP1 をインストールした後、OneNote 機能 [RTDocument ビューア &gt; 設定できるようになります。</value>
  </data>
  <data name="OneNote2007WarningKey" xml:space="preserve">
    <value>OneNote 2007 警告</value>
  </data>
  <data name="OneNote2007WarningMsg" xml:space="preserve">
    <value>ConferenceXP は、OneNote 2007 がインストールされている初期化エラーが発生しましたが検出されました。  officeupdate.microsoft.com から最新の更新を確認してください。

 注: 実行 OneNote したらを初期化する前に CXP が認識する必要があります。

 更新後、OneNote 機能 [設定]-&gt; RTDocument ビューア使用可能になります。</value>
  </data>
  <data name="OneNoteImporter" xml:space="preserve">
    <value>OneNote インポータ</value>
  </data>
  <data name="OverwiteFile" xml:space="preserve">
    <value>Overwite ファイルか。</value>
  </data>
  <data name="ParentTocNodeNotFound" xml:space="preserve">
    <value>ページの親の TOCNode 見つかりません。</value>
  </data>
  <data name="PleaseEnterAValidResponse" xml:space="preserve">
    <value>有効な応答を入力してください。</value>
  </data>
  <data name="SameTitleError" xml:space="preserve">
    <value>受信ドキュメントのこのフォルダが別のドキュメントと同じタイトル。  たい上書き:"{0}"か?

いいえ ' 名を自動的に変更するには、ファイルと上書きするには [はい] を選択します。</value>
  </data>
  <data name="SaveThisSetting" xml:space="preserve">
    <value>この作成者のこの設定を保存します。</value>
  </data>
  <data name="StayAutoSynched" xml:space="preserve">
    <value>まずまま自動同期</value>
  </data>
  <data name="SyncToInstructor" xml:space="preserve">
    <value>講師用同期</value>
  </data>
  <data name="WhiteboardSession" xml:space="preserve">
    <value>ホワイトボード セッション {0}</value>
  </data>
  <data name="WhiteboardTitle" xml:space="preserve">
    <value>ホワイトボード 1</value>
  </data>
  <data name="WhyHelloThere" xml:space="preserve">
    <value>なぜ hello あります!</value>
  </data>
</root>