//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSR.LST.ConferenceXP.ReflectorService {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ReflectorConsole.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client IP address {0} deleted successfully.
        /// </summary>
        internal static string ClientIPAddressDeleted {
            get {
                return ResourceManager.GetString("ClientIPAddressDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client IP address you provided doesn&apos;t exist!.
        /// </summary>
        internal static string ClientIPAddressDoesNotExist {
            get {
                return ResourceManager.GetString("ClientIPAddressDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to delete a client from the client table (force leave).
        /// </summary>
        internal static string CmdLineDHelp {
            get {
                return ResourceManager.GetString("CmdLineDHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to get this help message.
        /// </summary>
        internal static string CmdLineHHelp {
            get {
                return ResourceManager.GetString("CmdLineHHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to print the client table.
        /// </summary>
        internal static string CmdLinePHelp {
            get {
                return ResourceManager.GetString("CmdLinePHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to stop the service and quit the console.
        /// </summary>
        internal static string CmdLineQHelp {
            get {
                return ResourceManager.GetString("CmdLineQHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to start the service.
        /// </summary>
        internal static string CmdLineSHelp {
            get {
                return ResourceManager.GetString("CmdLineSHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to stop the service.
        /// </summary>
        internal static string CmdLineTHelp {
            get {
                return ResourceManager.GetString("CmdLineTHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: to see the status of the service.
        /// </summary>
        internal static string CmdLineUHelp {
            get {
                return ResourceManager.GetString("CmdLineUHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter.
        /// </summary>
        internal static string Enter {
            get {
                return ResourceManager.GetString("Enter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Command.
        /// </summary>
        internal static string InvalidCommand {
            get {
                return ResourceManager.GetString("InvalidCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Entry: {0}.
        /// </summary>
        internal static string InvalidEntry {
            get {
                return ResourceManager.GetString("InvalidEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6 Multicast side RTCP EndPoint: {0}.
        /// </summary>
        internal static string IPv6MulticastSideRtcpEndpoint {
            get {
                return ResourceManager.GetString("IPv6MulticastSideRtcpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6 Multicast side RTP EndPoint: {0}.
        /// </summary>
        internal static string IPv6MulticastSideRtpEndpoint {
            get {
                return ResourceManager.GetString("IPv6MulticastSideRtpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6 Unicast side RTCP EndPoint: {0}.
        /// </summary>
        internal static string IPv6UnicastSideRtcpEndpoint {
            get {
                return ResourceManager.GetString("IPv6UnicastSideRtcpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6 Unicast side RTP EndPoint: {0}.
        /// </summary>
        internal static string IPv6UnicastSideRtpEndpoint {
            get {
                return ResourceManager.GetString("IPv6UnicastSideRtpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multicast side RTCP EndPoint: {0}.
        /// </summary>
        internal static string MulticastSideRtcpEndpoint {
            get {
                return ResourceManager.GetString("MulticastSideRtcpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multicast side RTP EndPoint: {0}.
        /// </summary>
        internal static string MulticastSideRtpEndpoint {
            get {
                return ResourceManager.GetString("MulticastSideRtpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the client IP:Port to be deleted:.
        /// </summary>
        internal static string PleaseEnterClientIPAddressToDelete {
            get {
                return ResourceManager.GetString("PleaseEnterClientIPAddressToDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reflector Console&gt; .
        /// </summary>
        internal static string ReflectorConsole {
            get {
                return ResourceManager.GetString("ReflectorConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service already started..
        /// </summary>
        internal static string ServiceAlreadyStarted {
            get {
                return ResourceManager.GetString("ServiceAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service is not running..
        /// </summary>
        internal static string ServiceIsNotRunning {
            get {
                return ResourceManager.GetString("ServiceIsNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service is running..
        /// </summary>
        internal static string ServiceIsRunning {
            get {
                return ResourceManager.GetString("ServiceIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service not running. Start the service first..
        /// </summary>
        internal static string ServiceNotRunningStartTheService {
            get {
                return ResourceManager.GetString("ServiceNotRunningStartTheService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service started successfully..
        /// </summary>
        internal static string ServiceStartedSuccessfully {
            get {
                return ResourceManager.GetString("ServiceStartedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service stopped successfully..
        /// </summary>
        internal static string ServiceStoppedSuccessfully {
            get {
                return ResourceManager.GetString("ServiceStoppedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.     Client IP     Group IP     Group Port     Join Time          Confirm. No..
        /// </summary>
        internal static string TableHeader {
            get {
                return ResourceManager.GetString("TableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unicast side RTCP EndPoint: {0}.
        /// </summary>
        internal static string UnicastSideRtcpEndpoint {
            get {
                return ResourceManager.GetString("UnicastSideRtcpEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unicast side RTP EndPoint: {0}.
        /// </summary>
        internal static string UnicastSideRtpEndpoint {
            get {
                return ResourceManager.GetString("UnicastSideRtpEndpoint", resourceCulture);
            }
        }
    }
}
